<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pig="https://pig.apache.org/">
  <pig:Program>
    <blocks>
      <statements xsi:type="pig:Default" name="Companies_source" value="{&quot;iterator&quot;:&quot;&quot;,&quot;referenceFormulation&quot;:&quot;ql:CSV&quot;,&quot;query&quot;:&quot;&quot;,&quot;sqlVersion&quot;:&quot;&quot;,&quot;tableName&quot;:&quot;&quot;,&quot;name&quot;:&quot;src/test/resources/exampleFallback/Companies.csv&quot;}"/>
      <statements xsi:type="pig:Default" name="Companies_referenceFormulation" value="ql:CSV"/>
      <statements xsi:type="pig:Default" name="Companies_iterator" value=""/>
      <statements xsi:type="pig:Default" name="Companies_template" value="http://ex.com/comp/{id}"/>
      <statements xsi:type="pig:Load" return="Companies_data">
        <path value="src/test/resources/exampleFallback/Companies.csv"/>
        <using exp="my.udf.LoadSource('${Companies_source}')" alias="(data:chararray)"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Default" name="City_DBpedia_source" value="{&quot;iterator&quot;:&quot;/sparql:sparql/sparql:results/sparql:result&quot;,&quot;referenceFormulation&quot;:&quot;ql:XPath&quot;,&quot;query&quot;:&quot;SELECT+DISTINCT+%3FcountryName+%3Fcountry+WHERE+%7B%0D%0A%3Fcountry+a+dbo%3ACountry%3B+rdfs%3Alabel+%3FcountryName+.%0D%0AFILTER+%28+lang%28%3FcountryName%29+%3D+%2522en%2522+%29+%7D%0D%0AORDER+BY+DESC%28%3FcountryName%29%0D%0ALIMIT+7000&quot;,&quot;sqlVersion&quot;:&quot;&quot;,&quot;tableName&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;sparql&quot;:{&quot;endpoint&quot;:&quot;http://dbpedia.org/sparql/&quot;,&quot;supportedLanguage&quot;:&quot;sd:SPARQL11Query&quot;,&quot;resultFormat&quot;:&quot;http://www.w3.org/ns/formats/SPARQL_Results_XML&quot;}}"/>
      <statements xsi:type="pig:Default" name="City_DBpedia_referenceFormulation" value="ql:XPath"/>
      <statements xsi:type="pig:Default" name="City_DBpedia_iterator" value="/sparql:sparql/sparql:results/sparql:result"/>
      <statements xsi:type="pig:Default" name="City_DBpedia_template" value="sparql:binding/sparql:uri"/>
      <statements xsi:type="pig:Load" return="City_DBpedia_data">
        <path value="UnusedPath"/>
        <using exp="my.udf.LoadSource('${City_DBpedia_source}')" alias="(data:chararray)"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Default" name="Country_Local_source" value="{&quot;iterator&quot;:&quot;&quot;,&quot;referenceFormulation&quot;:&quot;ql:CSV&quot;,&quot;query&quot;:&quot;&quot;,&quot;sqlVersion&quot;:&quot;&quot;,&quot;tableName&quot;:&quot;&quot;,&quot;name&quot;:&quot;src/test/resources/exampleFallback/Companies.csv&quot;}"/>
      <statements xsi:type="pig:Default" name="Country_Local_referenceFormulation" value="ql:CSV"/>
      <statements xsi:type="pig:Default" name="Country_Local_iterator" value=""/>
      <statements xsi:type="pig:Default" name="Country_Local_template" value="http://ex.com/country/{country}"/>
      <statements xsi:type="pig:Load" return="Country_Local_data">
        <path value="src/test/resources/exampleFallback/Companies.csv"/>
        <using exp="my.udf.LoadSource('${Country_Local_source}')" alias="(data:chararray)"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Default" name="Country_DBpedia_source" value="{&quot;iterator&quot;:&quot;/sparql:sparql/sparql:results/sparql:result&quot;,&quot;referenceFormulation&quot;:&quot;ql:XPath&quot;,&quot;query&quot;:&quot;SELECT+DISTINCT+%3FcountryName+%3Fcountry+WHERE+%7B%0D%0A%3Fcountry+a+dbo%3ACountry%3B+rdfs%3Alabel+%3FcountryName+.%0D%0AFILTER+%28+lang%28%3FcountryName%29+%3D+%2522en%2522+%29+%7D%0D%0AORDER+BY+DESC%28%3FcountryName%29%0D%0ALIMIT+7000&quot;,&quot;sqlVersion&quot;:&quot;&quot;,&quot;tableName&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;sparql&quot;:{&quot;endpoint&quot;:&quot;http://dbpedia.org/sparql/&quot;,&quot;supportedLanguage&quot;:&quot;sd:SPARQL11Query&quot;,&quot;resultFormat&quot;:&quot;http://www.w3.org/ns/formats/SPARQL_Results_XML&quot;}}"/>
      <statements xsi:type="pig:Default" name="Country_DBpedia_referenceFormulation" value="ql:XPath"/>
      <statements xsi:type="pig:Default" name="Country_DBpedia_iterator" value="/sparql:sparql/sparql:results/sparql:result"/>
      <statements xsi:type="pig:Default" name="Country_DBpedia_template" value="sparql:binding/sparql:uri"/>
      <statements xsi:type="pig:Load" return="Country_DBpedia_data">
        <path value="UnusedPath"/>
        <using exp="my.udf.LoadSource('${Country_DBpedia_source}')" alias="(data:chararray)"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Default" name="Country_Local_DBpedia_source" value="{&quot;iterator&quot;:&quot;&quot;,&quot;referenceFormulation&quot;:&quot;ql:CSV&quot;,&quot;query&quot;:&quot;&quot;,&quot;sqlVersion&quot;:&quot;&quot;,&quot;tableName&quot;:&quot;&quot;,&quot;name&quot;:&quot;src/test/resources/exampleFallback/Companies.csv&quot;}"/>
      <statements xsi:type="pig:Default" name="Country_Local_DBpedia_referenceFormulation" value="ql:CSV"/>
      <statements xsi:type="pig:Default" name="Country_Local_DBpedia_iterator" value=""/>
      <statements xsi:type="pig:Default" name="Country_Local_DBpedia_template" value="http://dbpedia.org/resource/{country}"/>
      <statements xsi:type="pig:Load" return="Country_Local_DBpedia_data">
        <path value="src/test/resources/exampleFallback/Companies.csv"/>
        <using exp="my.udf.LoadSource('${Country_Local_DBpedia_source}')" alias="(data:chararray)"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Block">
        <statements xsi:type="pig:Foreach" relation="Companies_data" return="Companies_table">
          <generate exp="FLATTEN(extract(data,&#xD;&#xA;&#x9;'${Companies_referenceFormulation}',&#xD;&#xA;&#x9;'${Companies_iterator}',&#xD;&#xA;&#x9;toTuple('id'),&#xD;&#xA;&#x9;toTuple('country')))"/>
        </statements>
        <statements xsi:type="pig:Foreach" relation="Companies_table" return="Companies_table">
          <generate exp="FORMAT('${Companies_template}', $0)"/>
          <generate exp="$0"/>
          <generate exp="$1"/>
        </statements>
      </statements>
      <statements xsi:type="pig:Block">
        <statements xsi:type="pig:Foreach" relation="City_DBpedia_data" return="City_DBpedia_table">
          <generate exp="FLATTEN(extract(data,&#xD;&#xA;&#x9;'${City_DBpedia_referenceFormulation}',&#xD;&#xA;&#x9;'${City_DBpedia_iterator}',&#xD;&#xA;&#x9;toTuple('/sparql:sparql/sparql:results/sparql:result/sparql:binding/sparql:uri')))"/>
        </statements>
        <statements xsi:type="pig:Foreach" relation="City_DBpedia_table" return="City_DBpedia_table">
          <generate exp="FORMAT('${City_DBpedia_template}', $0)"/>
          <generate exp="$0"/>
        </statements>
      </statements>
      <statements xsi:type="pig:Block">
        <statements xsi:type="pig:Foreach" relation="Country_Local_data" return="Country_Local_table">
          <generate exp="FLATTEN(extract(data,&#xD;&#xA;&#x9;'${Country_Local_referenceFormulation}',&#xD;&#xA;&#x9;'${Country_Local_iterator}',&#xD;&#xA;&#x9;toTuple('country')))"/>
        </statements>
        <statements xsi:type="pig:Foreach" relation="Country_Local_table" return="Country_Local_table">
          <generate exp="FORMAT('${Country_Local_template}', $0)"/>
          <generate exp="$0"/>
        </statements>
      </statements>
      <statements xsi:type="pig:Block">
        <statements xsi:type="pig:Foreach" relation="Country_DBpedia_data" return="Country_DBpedia_table">
          <generate exp="FLATTEN(extract(data,&#xD;&#xA;&#x9;'${Country_DBpedia_referenceFormulation}',&#xD;&#xA;&#x9;'${Country_DBpedia_iterator}',&#xD;&#xA;&#x9;toTuple('/sparql:sparql/sparql:results/sparql:result/sparql:binding/sparql:uri')))"/>
        </statements>
        <statements xsi:type="pig:Foreach" relation="Country_DBpedia_table" return="Country_DBpedia_table">
          <generate exp="FORMAT('${Country_DBpedia_template}', $0)"/>
          <generate exp="$0"/>
        </statements>
      </statements>
      <statements xsi:type="pig:Block">
        <statements xsi:type="pig:Foreach" relation="Country_Local_DBpedia_data" return="Country_Local_DBpedia_table">
          <generate exp="FLATTEN(extract(data,&#xD;&#xA;&#x9;'${Country_Local_DBpedia_referenceFormulation}',&#xD;&#xA;&#x9;'${Country_Local_DBpedia_iterator}',&#xD;&#xA;&#x9;toTuple('country')))"/>
        </statements>
        <statements xsi:type="pig:Foreach" relation="Country_Local_DBpedia_table" return="Country_Local_DBpedia_table">
          <generate exp="FORMAT('${Country_Local_DBpedia_template}', $0)"/>
          <generate exp="$0"/>
        </statements>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Assignment" left="Companies_subjectMap">
        <right value="Companies_table"/>
      </statements>
      <statements xsi:type="pig:Foreach" relation="Companies_subjectMap" return="Companies_subjectMap">
        <generate exp="$0"/>
        <generate exp="'rdf:type'"/>
        <generate exp="'ex:Company'"/>
      </statements>
      <statements xsi:type="pig:Assignment" left="RDFS">
        <right value="Companies_subjectMap"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Assignment" left="City_DBpedia_subjectMap">
        <right value="City_DBpedia_table"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Assignment" left="Country_Local_subjectMap">
        <right value="Country_Local_table"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Assignment" left="Country_DBpedia_subjectMap">
        <right value="Country_DBpedia_table"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Assignment" left="Country_Local_DBpedia_subjectMap">
        <right value="Country_Local_DBpedia_table"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Assignment" left="Companies_refObjectMap">
        <right value="Companies_table"/>
      </statements>
      <statements xsi:type="pig:Filter" relation="Companies_refObjectMap" condition="equalCondition(TOBAG(TOTUPLE($2,country),),'!match(%%country%%,\%22NewZealand\%22)'" return="Companies_refObjectMap"/>
      <statements xsi:type="pig:Foreach" relation="Companies_table" return="Companies_refObjectMap">
        <generate exp="$0"/>
        <generate exp="'ex:country'"/>
        <generate exp="FORMAT('&lt;http://dbpedia.org/resource/%s>',$2)"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="Companies_refObjectMap"/>
      </statements>
      <statements xsi:type="pig:Foreach" relation="Companies_table" return="Companies_refObjectMap">
        <generate exp="$0"/>
        <generate exp="'ex:country'"/>
        <generate exp="FORMAT('&lt;http://ex.com/country/%s>',$2)"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="Companies_refObjectMap"/>
      </statements>
      <statements xsi:type="pig:Filter" relation="CompaniesrefObjectMap" condition="($0 is not null) and ($1 is not null) and ($2 is not null)" return="CompaniesrefObjectMap"/>
      <statements xsi:type="pig:GroupAll" relation="CompaniesrefObjectMap" return="gpom1"/>
      <statements xsi:type="pig:GroupAll" relation="CompaniesrefObjectMap2" return="gpom1"/>
      <statements xsi:type="pig:Cross" return="cgp">
        <relation1 value="gpom1"/>
        <relation2 value="gpom1"/>
      </statements>
      <statements xsi:type="pig:Foreach" relation="cgp" return="CompaniesrefObjectMap">
        <generate exp="FLATTEN(Fallback(COUNT(CompaniesrefObjectMap),$1,$3))"/>
      </statements>
    </blocks>
    <blocks/>
    <blocks/>
    <blocks/>
    <blocks/>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'rr:'"/>
        <generate exp="'http://www.w3.org/ns/r2rml#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'rml:'"/>
        <generate exp="'http://semweb.mmlab.be/ns/rml#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'crml:'"/>
        <generate exp="'http://semweb.mmlab.be/ns/crml#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'ql:'"/>
        <generate exp="'http://semweb.mmlab.be/ns/ql#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'rdfs:'"/>
        <generate exp="'http://www.w3.org/2000/01/rdf-schema#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'xsd:'"/>
        <generate exp="'http://www.w3.org/2001/XMLSchema#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'dcat:'"/>
        <generate exp="'http://www.w3.org/ns/dcat#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'sd:'"/>
        <generate exp="'http://www.w3.org/ns/sparql-service-description#.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'dcterms:'"/>
        <generate exp="'http://purl.org/dc/terms/.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@prefix'"/>
        <generate exp="'ex:'"/>
        <generate exp="'http://example.com/.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
    <blocks>
      <statements xsi:type="pig:Foreach" relation="RDFS" return="ns">
        <generate exp="'@base'"/>
        <generate exp="''"/>
        <generate exp="'http://example.com/base.'"/>
      </statements>
      <statements xsi:type="pig:Union" return="RDFS">
        <relation1 value="RDFS"/>
        <relation2 value="ns"/>
      </statements>
    </blocks>
  </pig:Program>
  <pig:Union return="RDFS">
    <relation1 value="RDFS"/>
    <relation2 value="Companies_subjectMap"/>
  </pig:Union>
  <pig:Block/>
  <pig:Block/>
  <pig:Block>
    <statements xsi:type="pig:Assignment" left="Companies_objectMap">
      <right value="Companies_table"/>
    </statements>
    <statements xsi:type="pig:Filter" relation="Companies_objectMap" condition="equalCondition(TOBAG(TOTUPLE($2,country),),'!match(%%country%%,\%22NewZealand\%22)'" return="Companies_objectMap"/>
    <statements xsi:type="pig:Assignment" left="Companies_objectMap">
      <right value="Companies_table"/>
    </statements>
    <statements xsi:type="pig:Foreach" relation="Companies_objectMap" return="Companies_objectMap">
      <generate exp="$0"/>
      <generate exp="'ex:country'"/>
      <generate exp="''"/>
    </statements>
    <statements xsi:type="pig:Union" return="RDFS">
      <relation1 value="RDFS"/>
      <relation2 value="Companies_objectMap"/>
    </statements>
  </pig:Block>
  <pig:Block/>
  <pig:Block/>
  <pig:Block/>
  <pig:Block/>
  <pig:Block/>
  <pig:Block/>
  <pig:Union return="RDFS">
    <relation1 value="RDFS"/>
    <relation2 value="CompaniesrefObjectMap"/>
  </pig:Union>
  <pig:Block/>
  <pig:Block>
    <statements xsi:type="pig:Assignment" left="Companies_objectMap">
      <right value="Companies_table"/>
    </statements>
    <statements xsi:type="pig:Foreach" relation="Companies_objectMap" return="Companies_objectMap">
      <generate exp="$0"/>
      <generate exp="'ex:country'"/>
      <generate exp="''"/>
    </statements>
    <statements xsi:type="pig:Union" return="RDFS">
      <relation1 value="RDFS"/>
      <relation2 value="Companies_objectMap"/>
    </statements>
  </pig:Block>
  <pig:Block/>
  <pig:Block/>
  <pig:Block/>
  <pig:Block/>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@base'"/>
    <generate exp="''"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
  <pig:Foreach relation="RDFS" return="ns">
    <generate exp="'@prefix'"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c'"/>
    <generate exp="'org.eclipse.m2m.atl.engine.emfvm.lib.OclUndefined@78ac277c.'"/>
  </pig:Foreach>
</xmi:XMI>
