grammar org.xtext.r2ps.rml.RML with org.eclipse.xtext.common.Terminals

generate rML "http://www.xtext.org/r2ps/rml/RML"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Mapping:
	statements+=Statement*
;

Statement:
	(directive=Directive | triple=Triples) '.'
;

Directive:
	prefix=PrefixID | base=Base
;

PrefixID:
	'@prefix' prefixName=PrefixName uriRef=URIREF
;

Base:
	'@base' uriRef=URIREF
;

Triples:
	subject=Subject
	predicateObjectList=PredicateObjectList
;

PredicateObject:
	verb=Verb objectList=ObjectList
;

PredicateObjectList:
	predicateObjects+=PredicateObject (';' predicateObjects+=PredicateObject)* (';')?
;

ObjectList:
	objects+=Object (',' objects+=Object)*
;

Verb:
	predicate=Predicate | isA?='a'
;

Subject:
	resource=iResource | blank=Blank
;

Predicate returns iResource:
	iResource
;

Object:
	resource=iResource | blank=Blank | literal=Literal
;

LanguageString:
	qutoedString=QuotedString ('@' lang=ID)?
;

Literal:
	languageString=LanguageString | datatypeString=DatatypeString | dword=INT | real=DOUBLE | decimal=DECIMAL | bool=Boolean	
;

DatatypeString:
	qutoedString=QuotedString '^^' resource=iResource
;

Boolean returns ecore::EString:
	'true' | 'false'
;

Blank:
	nodeID=NodeID | isSquare?='[]' | '[' predicateObjectList=PredicateObjectList ']' | collection=Collection
;

ItemList:
	objects+=Object (objects+=Object)*
;

Collection:
	{Collection} '(' itemList=ItemList? ')'
;

iResource:
	uriRef=URIREF | qname=Qname
;

NodeID:
	'_:' name=ID
;

Qname:
	{Qname} =>prefixName=PrefixName =>name=ID?
;

PrefixName returns ecore::EString:
	ID? ':'
;

QuotedString returns ecore::EString:
	STRING
;

terminal DOUBLE:
	('-' | '+')? (('0'..'9')+ '.' ('0'..'9')* EXPONENT | '.' ('0'..'9')+ EXPONENT | ('0'..'9')+ EXPONENT)
;

terminal DECIMAL:
	('-'|'+')? (('0'..'9')+ '.' ('0'..'9')* | '.' ('0'..'9')+)
;

terminal EXPONENT:
	('e' | 'E') ('-'|'+')? ('0'..'9')+
;

terminal URIREF returns ecore::EString:
	'<' -> '>'
;

@Override 
terminal ID : '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;
@Override
terminal SL_COMMENT : '#' !('\n'|'\r')* ('\r'? '\n')?;
@Override
terminal STRING:
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'" |
			'"""' -> '"""'
		;