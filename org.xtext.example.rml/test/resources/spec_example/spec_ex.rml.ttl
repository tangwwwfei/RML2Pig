@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.          
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ex: <http://example.com/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.

<#AirportMapping>
  rml:logicalSource [
    rml:source "http://www.example.com/Airport.csv" ;
    rml:referenceFormulation ql:CSV
  ];
  rr:subjectMap [
    rr:template "http://airport.example.com/{id}";
    rr:class ex:Stop 
  ];
  rr:predicateObjectMap [
    rr:predicate ex:latlong;
    rr:objectMap [
      rr:parentTriplesMap <#LocationMapping_CSV> 
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:route;
    rr:objectMap [
      rr:parentTriplesMap <#TransportMapping> ;
      
        rr:joinCondition [
          rr:child "bus";
          rr:parent "/transport/bus@id"
        ]
      
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:location;
    rr:objectMap [
      rr:parentTriplesMap <#VenueMapping> ;
    
        rr:joinCondition [
          rr:child "city";
          rr:parent "$.venue[*].location.city"
        ]
      
    ]
  ].


<#LocationMapping_CSV>
  rml:logicalSource [
    rml:source "http://www.example.com/Airport.csv" ;
    rml:referenceFormulation ql:CSV
  ];
  rr:subjectMap [
    rr:template "http://loc.example.com/latlong/{latitude},{longitude}"
  ];
  rr:predicateObjectMap [
    rr:predicate ex:lat;
    rr:objectMap [
      rml:reference "latitude" 
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:long;
    rr:objectMap [
      rml:reference "longitude"
    ]
  ].


  <#VenueMapping>
  rml:logicalSource [
    rml:name "http://www.example.com/Venue.json";
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$"
  ];
  rr:subjectMap 
  [
    rr:template "http://loc.example.com/city/{$.venue[*].location.city}";
    rr:class ex:City;
  ];
  rr:predicateObjectMap [
    rr:predicate ex:latlong;
    rr:objectMap [
      rr:parentTriplesMap <#LocationMapping_JSON> 
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:countryCode;
    rr:objectMap [
      rml:reference "$.venue[*].location.country"
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:onContinent;
    rr:objectMap [
      rml:reference "$.venue[*].location.continent"
    ]
  ].


  <#LocationMapping_JSON>
  rml:logicalSource [
    rml:source "http://www.example.com/Venue.json" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$"
  ];
  rr:subjectMap [
    rr:template "http://loc.example.com/latlong/{$.venue[*].latitude},{$.venue[*].longitude}"
  ];
  rr:predicateObjectMap [
    rr:predicate ex:lat;
    rr:objectMap [
      rml:reference "$.venue[*].latitude" 
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:long;
    rr:objectMap [
      rml:reference "$.venue[*].longitude"
    ]
  ].


  <#TransportMapping>
  rml:logicalSource [
    rml:source "http://www.example.com/Transport.xml" ;
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/transport/bus"
  ];
  rr:subjectMap [
    rr:template "http://trans.example.com/bus/{@id}";
    rr:class ex:Transport ;  
  ];
  rr:predicateObjectMap [
    rr:predicate ex:type ;
    rr:objectMap [
      rr:template "http://trans.example.com/vehicle/{@type}";
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:stop;
    rr:objectMap [
      rr:parentTriplesMap <#StopMapping> 
    ]
  ].


  <#StopMapping>
  rml:logicalSource [
    rml:source "http://www.example.com/Transport.xml" ;
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/transport/bus/route/stop"
  ];
  rr:subjectMap [ 
    rr:template "http://trans.example.com/stop/{@id}";
    rr:class ex:Stop 
  ];
  rr:predicateObjectMap [
    rr:predicate ex:stop;
    rr:objectMap [
      rml:reference "@id";
      rr:datatype xsd:int
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:stopLabel;
    rr:objectMap  [
      rml:reference ".";
    ]
  ].