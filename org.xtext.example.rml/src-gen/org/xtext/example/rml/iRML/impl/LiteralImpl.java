/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.rml.iRML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.rml.iRML.DatatypeString;
import org.xtext.example.rml.iRML.IRMLPackage;
import org.xtext.example.rml.iRML.LanguageString;
import org.xtext.example.rml.iRML.Literal;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Literal</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.rml.iRML.impl.LiteralImpl#getLanguageString <em>Language String</em>}</li>
 *   <li>{@link org.xtext.example.rml.iRML.impl.LiteralImpl#getDatatypeString <em>Datatype String</em>}</li>
 *   <li>{@link org.xtext.example.rml.iRML.impl.LiteralImpl#getDword <em>Dword</em>}</li>
 *   <li>{@link org.xtext.example.rml.iRML.impl.LiteralImpl#getReal <em>Real</em>}</li>
 *   <li>{@link org.xtext.example.rml.iRML.impl.LiteralImpl#getDecimal <em>Decimal</em>}</li>
 *   <li>{@link org.xtext.example.rml.iRML.impl.LiteralImpl#getBool <em>Bool</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LiteralImpl extends MinimalEObjectImpl.Container implements Literal
{
  /**
   * The cached value of the '{@link #getLanguageString() <em>Language String</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguageString()
   * @generated
   * @ordered
   */
  protected LanguageString languageString;

  /**
   * The cached value of the '{@link #getDatatypeString() <em>Datatype String</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatatypeString()
   * @generated
   * @ordered
   */
  protected DatatypeString datatypeString;

  /**
   * The default value of the '{@link #getDword() <em>Dword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDword()
   * @generated
   * @ordered
   */
  protected static final int DWORD_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDword() <em>Dword</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDword()
   * @generated
   * @ordered
   */
  protected int dword = DWORD_EDEFAULT;

  /**
   * The default value of the '{@link #getReal() <em>Real</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReal()
   * @generated
   * @ordered
   */
  protected static final String REAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReal() <em>Real</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReal()
   * @generated
   * @ordered
   */
  protected String real = REAL_EDEFAULT;

  /**
   * The default value of the '{@link #getDecimal() <em>Decimal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecimal()
   * @generated
   * @ordered
   */
  protected static final String DECIMAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDecimal() <em>Decimal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecimal()
   * @generated
   * @ordered
   */
  protected String decimal = DECIMAL_EDEFAULT;

  /**
   * The default value of the '{@link #getBool() <em>Bool</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBool()
   * @generated
   * @ordered
   */
  protected static final String BOOL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBool() <em>Bool</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBool()
   * @generated
   * @ordered
   */
  protected String bool = BOOL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LiteralImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IRMLPackage.Literals.LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LanguageString getLanguageString()
  {
    return languageString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLanguageString(LanguageString newLanguageString, NotificationChain msgs)
  {
    LanguageString oldLanguageString = languageString;
    languageString = newLanguageString;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__LANGUAGE_STRING, oldLanguageString, newLanguageString);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLanguageString(LanguageString newLanguageString)
  {
    if (newLanguageString != languageString)
    {
      NotificationChain msgs = null;
      if (languageString != null)
        msgs = ((InternalEObject)languageString).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IRMLPackage.LITERAL__LANGUAGE_STRING, null, msgs);
      if (newLanguageString != null)
        msgs = ((InternalEObject)newLanguageString).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IRMLPackage.LITERAL__LANGUAGE_STRING, null, msgs);
      msgs = basicSetLanguageString(newLanguageString, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__LANGUAGE_STRING, newLanguageString, newLanguageString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DatatypeString getDatatypeString()
  {
    return datatypeString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDatatypeString(DatatypeString newDatatypeString, NotificationChain msgs)
  {
    DatatypeString oldDatatypeString = datatypeString;
    datatypeString = newDatatypeString;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__DATATYPE_STRING, oldDatatypeString, newDatatypeString);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDatatypeString(DatatypeString newDatatypeString)
  {
    if (newDatatypeString != datatypeString)
    {
      NotificationChain msgs = null;
      if (datatypeString != null)
        msgs = ((InternalEObject)datatypeString).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IRMLPackage.LITERAL__DATATYPE_STRING, null, msgs);
      if (newDatatypeString != null)
        msgs = ((InternalEObject)newDatatypeString).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IRMLPackage.LITERAL__DATATYPE_STRING, null, msgs);
      msgs = basicSetDatatypeString(newDatatypeString, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__DATATYPE_STRING, newDatatypeString, newDatatypeString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDword()
  {
    return dword;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDword(int newDword)
  {
    int oldDword = dword;
    dword = newDword;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__DWORD, oldDword, dword));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReal()
  {
    return real;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReal(String newReal)
  {
    String oldReal = real;
    real = newReal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__REAL, oldReal, real));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDecimal()
  {
    return decimal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDecimal(String newDecimal)
  {
    String oldDecimal = decimal;
    decimal = newDecimal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__DECIMAL, oldDecimal, decimal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBool()
  {
    return bool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBool(String newBool)
  {
    String oldBool = bool;
    bool = newBool;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IRMLPackage.LITERAL__BOOL, oldBool, bool));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IRMLPackage.LITERAL__LANGUAGE_STRING:
        return basicSetLanguageString(null, msgs);
      case IRMLPackage.LITERAL__DATATYPE_STRING:
        return basicSetDatatypeString(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IRMLPackage.LITERAL__LANGUAGE_STRING:
        return getLanguageString();
      case IRMLPackage.LITERAL__DATATYPE_STRING:
        return getDatatypeString();
      case IRMLPackage.LITERAL__DWORD:
        return getDword();
      case IRMLPackage.LITERAL__REAL:
        return getReal();
      case IRMLPackage.LITERAL__DECIMAL:
        return getDecimal();
      case IRMLPackage.LITERAL__BOOL:
        return getBool();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IRMLPackage.LITERAL__LANGUAGE_STRING:
        setLanguageString((LanguageString)newValue);
        return;
      case IRMLPackage.LITERAL__DATATYPE_STRING:
        setDatatypeString((DatatypeString)newValue);
        return;
      case IRMLPackage.LITERAL__DWORD:
        setDword((Integer)newValue);
        return;
      case IRMLPackage.LITERAL__REAL:
        setReal((String)newValue);
        return;
      case IRMLPackage.LITERAL__DECIMAL:
        setDecimal((String)newValue);
        return;
      case IRMLPackage.LITERAL__BOOL:
        setBool((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IRMLPackage.LITERAL__LANGUAGE_STRING:
        setLanguageString((LanguageString)null);
        return;
      case IRMLPackage.LITERAL__DATATYPE_STRING:
        setDatatypeString((DatatypeString)null);
        return;
      case IRMLPackage.LITERAL__DWORD:
        setDword(DWORD_EDEFAULT);
        return;
      case IRMLPackage.LITERAL__REAL:
        setReal(REAL_EDEFAULT);
        return;
      case IRMLPackage.LITERAL__DECIMAL:
        setDecimal(DECIMAL_EDEFAULT);
        return;
      case IRMLPackage.LITERAL__BOOL:
        setBool(BOOL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IRMLPackage.LITERAL__LANGUAGE_STRING:
        return languageString != null;
      case IRMLPackage.LITERAL__DATATYPE_STRING:
        return datatypeString != null;
      case IRMLPackage.LITERAL__DWORD:
        return dword != DWORD_EDEFAULT;
      case IRMLPackage.LITERAL__REAL:
        return REAL_EDEFAULT == null ? real != null : !REAL_EDEFAULT.equals(real);
      case IRMLPackage.LITERAL__DECIMAL:
        return DECIMAL_EDEFAULT == null ? decimal != null : !DECIMAL_EDEFAULT.equals(decimal);
      case IRMLPackage.LITERAL__BOOL:
        return BOOL_EDEFAULT == null ? bool != null : !BOOL_EDEFAULT.equals(bool);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (dword: ");
    result.append(dword);
    result.append(", real: ");
    result.append(real);
    result.append(", decimal: ");
    result.append(decimal);
    result.append(", bool: ");
    result.append(bool);
    result.append(')');
    return result.toString();
  }

} //LiteralImpl
